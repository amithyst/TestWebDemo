# Generated by Django 5.2 on 2025-06-24 01:15

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="AttributeType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attribute_id",
                    models.CharField(
                        help_text="属性ID, 例如 'generic.attack_damage'", max_length=100
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="人类可读的名称, 例如 'Generic Attack Damage'", max_length=100
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BaseItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "item_id",
                    models.CharField(
                        help_text="Minecraft 的物品ID, 例如 'minecraft:diamond_sword'",
                        max_length=100,
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="人类可读的名称, 例如 'Diamond Sword'", max_length=100
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MinecraftVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "version_number",
                    models.CharField(
                        help_text="例如 '1.20.1' 或 '1.21.4'", max_length=20, unique=True
                    ),
                ),
                (
                    "ordering_id",
                    models.PositiveIntegerField(
                        help_text="用于排序和比较的版本整数ID, 例如 12001 代表 1.20.1", unique=True
                    ),
                ),
            ],
            options={
                "ordering": ["ordering_id"],
            },
        ),
        migrations.CreateModel(
            name="GeneratedCommand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(help_text="为这个命令配置起一个名字，方便查找", max_length=100),
                ),
                (
                    "custom_name",
                    models.CharField(
                        blank=True,
                        help_text="物品在游戏中的自定义名称 (支持JSON文本)",
                        max_length=255,
                        null=True,
                    ),
                ),
                (
                    "lore",
                    models.TextField(
                        blank=True,
                        help_text="物品的描述文字 (支持JSON文本), 每行用 \\n 分隔",
                        null=True,
                    ),
                ),
                ("count", models.PositiveIntegerField(default=1)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "base_item",
                    models.ForeignKey(
                        help_text="该命令的基础物品",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="MC_command.baseitem",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="commands",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "target_version",
                    models.ForeignKey(
                        help_text="命令生成的目标 Minecraft 版本",
                        on_delete=django.db.models.deletion.PROTECT,
                        to="MC_command.minecraftversion",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AppliedAttribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("amount", models.FloatField()),
                (
                    "operation",
                    models.IntegerField(
                        choices=[
                            (0, "Add"),
                            (1, "Multiply Base"),
                            (2, "Multiply Total"),
                        ],
                        default=0,
                    ),
                ),
                (
                    "slot",
                    models.CharField(
                        choices=[
                            ("any", "Any"),
                            ("mainhand", "Main Hand"),
                            ("offhand", "Off Hand"),
                            ("head", "Head"),
                            ("chest", "Chest"),
                            ("legs", "Legs"),
                            ("feet", "Feet"),
                        ],
                        default="any",
                        max_length=20,
                    ),
                ),
                (
                    "modifier_name",
                    models.CharField(
                        help_text="这个修改器的名字，方便识别 (会成为NBT中的Name标签)", max_length=100
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="MC_command.attributetype",
                    ),
                ),
                (
                    "command",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="attributes",
                        to="MC_command.generatedcommand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Enchantment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "enchant_id",
                    models.CharField(
                        help_text="附魔ID, 例如 'minecraft:sharpness'", max_length=100
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="人类可读的名称, 例如 'Sharpness'", max_length=100
                    ),
                ),
                (
                    "max_version",
                    models.ForeignKey(
                        blank=True,
                        help_text="该项目有效的最高版本 (留空表示无限制)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="MC_command.minecraftversion",
                    ),
                ),
                (
                    "min_version",
                    models.ForeignKey(
                        blank=True,
                        help_text="该项目有效的最低版本 (留空表示无限制)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="MC_command.minecraftversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="baseitem",
            name="max_version",
            field=models.ForeignKey(
                blank=True,
                help_text="该项目有效的最高版本 (留空表示无限制)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="MC_command.minecraftversion",
            ),
        ),
        migrations.AddField(
            model_name="baseitem",
            name="min_version",
            field=models.ForeignKey(
                blank=True,
                help_text="该项目有效的最低版本 (留空表示无限制)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="MC_command.minecraftversion",
            ),
        ),
        migrations.AddField(
            model_name="attributetype",
            name="max_version",
            field=models.ForeignKey(
                blank=True,
                help_text="该项目有效的最高版本 (留空表示无限制)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="MC_command.minecraftversion",
            ),
        ),
        migrations.AddField(
            model_name="attributetype",
            name="min_version",
            field=models.ForeignKey(
                blank=True,
                help_text="该项目有效的最低版本 (留空表示无限制)",
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="+",
                to="MC_command.minecraftversion",
            ),
        ),
        migrations.CreateModel(
            name="PotionEffectType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "effect_id",
                    models.CharField(
                        help_text="药水效果ID, 例如 'minecraft:speed'", max_length=100
                    ),
                ),
                (
                    "name",
                    models.CharField(help_text="人类可读的名称, 例如 'Speed'", max_length=100),
                ),
                (
                    "max_version",
                    models.ForeignKey(
                        blank=True,
                        help_text="该项目有效的最高版本 (留空表示无限制)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="MC_command.minecraftversion",
                    ),
                ),
                (
                    "min_version",
                    models.ForeignKey(
                        blank=True,
                        help_text="该项目有效的最低版本 (留空表示无限制)",
                        null=True,
                        on_delete=django.db.models.deletion.PROTECT,
                        related_name="+",
                        to="MC_command.minecraftversion",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="AppliedPotionEffect",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "amplifier",
                    models.PositiveIntegerField(
                        default=0, help_text="效果等级, 从0开始 (0=I, 1=II)"
                    ),
                ),
                (
                    "duration",
                    models.PositiveIntegerField(
                        default=600, help_text="持续时间 (单位: ticks, 20 ticks = 1s)"
                    ),
                ),
                ("show_particles", models.BooleanField(default=True)),
                ("is_ambient", models.BooleanField(default=False)),
                (
                    "command",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="potion_effects",
                        to="MC_command.generatedcommand",
                    ),
                ),
                (
                    "effect",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="MC_command.potioneffecttype",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WrittenBookContent",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("title", models.CharField(max_length=100)),
                ("author", models.CharField(max_length=50)),
                ("pages", models.TextField(help_text="书本内容，存储为 JSON 字符串数组")),
                (
                    "command",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="book_content",
                        to="MC_command.generatedcommand",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="AppliedEnchantment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("level", models.PositiveIntegerField(default=1)),
                (
                    "enchantment",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="MC_command.enchantment",
                    ),
                ),
                (
                    "command",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enchantments",
                        to="MC_command.generatedcommand",
                    ),
                ),
            ],
            options={
                "unique_together": {("command", "enchantment")},
            },
        ),
    ]
